version: '3.8'
services:
  consumer:
    build: .
    ports:
      - 5000:5000
    environment:
      - REDIS_HOST=redis
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_started
    command: fraud_detector_consumer.py        

  producer:
    build: .
    environment:
      - REDIS_HOST=redis
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_started
    command: transaction_producer.py        

  redis:
    image: redis/redis-stack
    hostname: redis
    ports:
      - 6379:6379
      - 8001:8001
    volumes:
      - redis:/data
  minio:
    image: quay.io/minio/minio
    hostname: minio
    ports:
      - 9000:9000
      - 9001:9001
    command: server /data --console-address ":9001"
    volumes:
      - minio:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmqadmin
      - RABBITMQ_DEFAULT_PASS=rabbitmqadmin
    healthcheck:
      test: "rabbitmq-diagnostics check_port_connectivity --formatter json | tail -1 | grep -q '\"result\":\"ok\"'"
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 10s

volumes:
  minio:
    driver: local
  redis:
    driver: local
